#labels Featured
= Introduction =

This page describes how to compile the whole platform of tmlinux (includding linux kernel, uclibc and so on) and how to populate sysroot for application developer.

= Details =

==Preparation==
===0. Environment setup==
In the following section, let's suppose the workdir is _*/home/guohr/worktest*_ and the TCS installation directory is _*/opt/NXP/TCS510*_
 
===1. Get and Install TCS Linux edition===
First of all, you should install TCS Linux edition on your Linux machines. Please goto [http://www.tcshelp.com] to get it. Of course, you should have the license for it. 
In the following section, let's suppose the installation directory of your TCS is _*/opt/NXP/TCS510/*_

To make sure the TCS tools(such as tmcc, tmld) are in the PATH environment
  {{{
export PATH=$PATH:/opt/NXP/TCS510/bin/
  }}}
  {{{
guohr@ghr-notebook-02:~/worktest> tmcc -V
tmcc: V7.1.0 of TCS V5.1(0042rc6_Linux)
tmcc warning : no work
  }}}


===2. Install CIL (C intermedia language)===
Note that: before continuing, you need to make sure you have installed OCaml language compiler. OCaml can be downloaded from http://caml.inria.fr/ocaml/. After downloading and unpacking the source distribution, in the ocaml directory, do:
  {{{
./configure
make world
make opt
make install
  }}}

Before building Linux kernel image, you need to setup and install cil in your Linux machine, which is used to process GNU C extension options when compiling Linux kernel.
  
Use the following command to check it out and compile, setup it.
  {{{
svn checkout http://tmlinux.googlecode.com/svn/trunk/cil
cd cil/
./configure
make  
export PATH=$PATH:/home/guohr/worktest/cil/obj/x86_LINUX/
  }}}

To validate the environment, type the following command and you will get the following message:
{{{
guohr@ghr-notebook-01:~/worktest/cil> cilly.asm.exe

Error: No arguments for CIL

Fatal error: exception Errormsg.Error
}}}

==Build Linux Kernel==
===1. checkout Linux kernel of tmlinux===
*Note that:*
Due to the limit of max upload size of google code, I put the Linux kernel of tmlinux to [http://www.gulessoft.com/en/compay/contribution/125.html gulessoft official site] and will move to this project site as soon as google increase the limit.

Download Linux kernel of tmlinux using the following command: (DO NOT forget to verify it using md5sum)
{{{
wget -c http://www.gulessoft.com/download/tmlinux/linux-2.6.14-tmlinux-1.0.tar.bz2 
}}}

Unpack the Linux kernel
{{{
tar xvfjp linux-2.6.14-tmlinux-1.0.tar.bz2
mv linux-2.6.14-tmlinux-1.0 linux
}}}

===2. Configure Linux kernel===
*Note that:* Because of lacking storage device, I have to put the root filesystem into RAM using *initramfs* mechanism. So you have to arrange the root filesystem correctly, or else the kernel image can not load the `init` program as you want. About more details of initramfs, please refer the files in *_Documentation/early-userspace/_* of linux kernel source distribution.

First configure the linux kernel using default configuration files by the following command (at *_/home/guohr/worktest/linux/_* directory).
{{{
make ttisim_defconfig
}}}

Then adjust the configuration if necessary by the following command
{{{
make menuconfig
}}}

====Some important configuration options you may need to adjust====
*Options about initramfs:* In most time, you have to adjust the `General setup -> Initramfs source file` to populate your root filesystem. Please refer ApplicationDeveloperGettingStart `Arrange target root file system and create initramfs cpio file` for detail information.

*Options about dynamically loading application:* To enable dynamically loading application, you must enable `Boot options -> Enable Load applications dynamically`.

===3. Build Linux kernel===
To build linux kernel image, use the following command at *_/home/guohr/worktest/linux_*:
{{{
make
}}}

After building kernel, the `TMLinux-pnx1500-ttisim-fp64-el.out` at _/home/guohr/worktest/linux/arch/trimedia/boot/_ is the executable Linux kernel image and the initramfs is built into it.

To run Linux kernel, use the following command:
{{{
ttisim -ms 67108864 arch/trimedia/boot/TMLinux-pnx1500-ttisim-fp64-el.out
}}}

*Note about memory size:* By default, the memory size of ttisim is 64M and the memory size  for Linux kernel is 56M. You can change the ttisim memory size when running kernel by changing the argument of `-ms` option. You can change the memory size for linux kernel by setting `Boot options -> System memory size(Mbytes)`.

==Build uClibc and generate sysroot==