diff -Nrup refpolicy/test_capable_file.te refpolicy.newpatch/test_capable_file.te
--- refpolicy/test_capable_file.te	2008-04-09 15:29:02.000000000 -0400
+++ refpolicy.newpatch/test_capable_file.te	2008-04-09 08:59:26.000000000 -0400
@@ -14,28 +14,31 @@ type test_fcap_t;
 typeattribute test_fcap_t capabledomain;
 typeattribute test_fcap_t testdomain;
 domain_type(test_fcap_t)
+unconfined_runs_test(test_fcap_t)
 
 # Domain for processes that have restricted capability
 type test_resfcap_t;
 typeattribute test_resfcap_t capabledomain;
 typeattribute test_resfcap_t testdomain;
 domain_type(test_resfcap_t)
+unconfined_runs_test(test_resfcap_t)
 
 # Another domain for processes that have restricted capability
 type test_res2fcap_t;
 typeattribute test_res2fcap_t capabledomain;
 typeattribute test_res2fcap_t testdomain;
 domain_type(test_res2fcap_t)
+unconfined_runs_test(test_res2fcap_t)
 
 # Domain for process that has no capability
 type test_nofcap_t;
 typeattribute test_nofcap_t capabledomain;
 typeattribute test_nofcap_t testdomain;
 domain_type(test_nofcap_t)
+unconfined_runs_test(test_nofcap_t)
 
 # Allow execution of helper programs.
 corecmd_exec_bin(capabledomain)
-corecmd_exec_sbin(capabledomain)
 domain_exec_all_entry_files(capabledomain)
 files_exec_etc_files(capabledomain)
 libs_use_ld_so(capabledomain)
diff -Nrup refpolicy/test_capable_net.te refpolicy.newpatch/test_capable_net.te
--- refpolicy/test_capable_net.te	2008-04-09 15:29:02.000000000 -0400
+++ refpolicy.newpatch/test_capable_net.te	2008-04-09 08:59:59.000000000 -0400
@@ -7,12 +7,14 @@
 # Type for process that is allowed certain capabilities
 type test_ncap_t;
 domain_type(test_ncap_t)
+unconfined_runs_test(test_ncap_t)
 typeattribute test_ncap_t capabledomain;
 typeattribute test_ncap_t testdomain;
 
 # Type for process that has restricted capability
 type test_resncap_t;
 domain_type(test_resncap_t)
+unconfined_runs_test(test_resncap_t)
 typeattribute test_resncap_t capabledomain;
 typeattribute test_resncap_t testdomain;
 
@@ -28,7 +30,7 @@ corenet_udp_sendrecv_all_nodes(capabledo
 corenet_raw_sendrecv_all_nodes(capabledomain)
 corenet_tcp_sendrecv_all_ports(capabledomain)
 corenet_udp_sendrecv_all_ports(capabledomain)
-corenet_non_ipsec_sendrecv(capabledomain)
+corenet_all_recvfrom_unlabeled(capabledomain)
 corenet_tcp_bind_all_nodes(capabledomain)
 corenet_udp_bind_all_nodes(capabledomain)
 sysnet_read_config(capabledomain)
@@ -44,8 +46,8 @@ require {
 allow capabledomain hi_reserved_port_t:tcp_socket name_bind;
 
 # Allow sbin_t to be entered from admin via certain utils.
-corecmd_sbin_entry_type(capabledomain)
-userdom_sysadm_sbin_spec_domtrans_to(capabledomain)
+corecmd_bin_entry_type(capabledomain)
+userdom_sysadm_bin_spec_domtrans_to(capabledomain)
 
 require {
 	type ifconfig_exec_t;
diff -Nrup refpolicy/test_capable_sys.te refpolicy.newpatch/test_capable_sys.te
--- refpolicy/test_capable_sys.te	2008-04-09 15:29:02.000000000 -0400
+++ refpolicy.newpatch/test_capable_sys.te	2008-04-09 09:00:06.000000000 -0400
@@ -7,12 +7,14 @@
 # Type for process that is allowed certain capabilities
 type test_scap_t;
 domain_type(test_scap_t)
+unconfined_runs_test(test_scap_t)
 typeattribute test_scap_t capabledomain;
 typeattribute test_scap_t testdomain;
 
 # Domain for process that has no capability
 type test_noscap_t;
 domain_type(test_noscap_t)
+unconfined_runs_test(test_noscap_t)
 typeattribute test_noscap_t capabledomain;
 typeattribute test_noscap_t testdomain;
 
diff -Nrup refpolicy/test_dyntrace.te refpolicy.newpatch/test_dyntrace.te
--- refpolicy/test_dyntrace.te	2008-04-09 15:29:01.000000000 -0400
+++ refpolicy.newpatch/test_dyntrace.te	2008-04-09 09:01:00.000000000 -0400
@@ -8,6 +8,8 @@ attribute dyntracedomain;
 # Domain for parent process.
 type test_dyntrace_parent_t;
 domain_type(test_dyntrace_parent_t)
+unconfined_runs_test(test_dyntrace_parent_t)
+domain_dyntrans_type(test_dyntrace_parent_t)
 typeattribute test_dyntrace_parent_t dyntracedomain;
 typeattribute test_dyntrace_parent_t testdomain;
 allow test_dyntrace_parent_t self:process ptrace;
@@ -16,6 +18,7 @@ allow test_dyntrace_parent_t self:proces
 # dynamic trans by the parent.
 type test_dyntrace_child_t;
 domain_type(test_dyntrace_child_t)
+unconfined_runs_test(test_dyntrace_child_t)
 typeattribute test_dyntrace_child_t dyntracedomain;
 typeattribute test_dyntrace_child_t testdomain;
 
@@ -23,6 +26,7 @@ typeattribute test_dyntrace_child_t test
 # dynamic transition by the parent.
 type test_dyntrace_notchild_t;
 domain_type(test_dyntrace_notchild_t) 
+unconfined_runs_test(test_dyntrace_notchild_t)
 typeattribute test_dyntrace_notchild_t dyntracedomain;
 typeattribute test_dyntrace_notchild_t testdomain;
 
diff -Nrup refpolicy/test_dyntrans.te refpolicy.newpatch/test_dyntrans.te
--- refpolicy/test_dyntrans.te	2008-04-09 15:29:01.000000000 -0400
+++ refpolicy.newpatch/test_dyntrans.te	2008-04-09 09:01:37.000000000 -0400
@@ -8,18 +8,22 @@ attribute dyntransdomain;
 # Domain for process that is allowed to transition to the new domain.
 type test_dyntrans_fromdomain_t;
 domain_type(test_dyntrans_fromdomain_t)
+unconfined_runs_test(test_dyntrans_fromdomain_t)
+domain_dyntrans_type(test_dyntrans_fromdomain_t)
 typeattribute test_dyntrans_fromdomain_t dyntransdomain;
 typeattribute test_dyntrans_fromdomain_t testdomain;
 
 # Domain for process that is not allowed to transition to the new domain.
 type test_dyntrans_notfromdomain_t;
 domain_type(test_dyntrans_notfromdomain_t)
+unconfined_runs_test(test_dyntrans_notfromdomain_t)
 typeattribute test_dyntrans_notfromdomain_t dyntransdomain;
 typeattribute test_dyntrans_notfromdomain_t testdomain;
 
 # Allow the fromdomain to dyntrans to the new domain.
 type test_dyntrans_todomain_t;
 domain_type(test_dyntrans_todomain_t)
+unconfined_runs_test(test_dyntrans_todomain_t)
 typeattribute test_dyntrans_todomain_t dyntransdomain;
 typeattribute test_dyntrans_todomain_t testdomain;
 
diff -Nrup refpolicy/test_entrypoint.te refpolicy.newpatch/test_entrypoint.te
--- refpolicy/test_entrypoint.te	2008-04-09 15:29:02.000000000 -0400
+++ refpolicy.newpatch/test_entrypoint.te	2008-04-09 09:01:40.000000000 -0400
@@ -10,6 +10,7 @@ files_type(test_entrypoint_execute_t)
 # Test domain that can only be entered via the type above.
 type test_entrypoint_t;
 domain_type(test_entrypoint_t)
+unconfined_runs_test(test_entrypoint_t)
 typeattribute test_entrypoint_t testdomain;
 
 # Allow execution of true.
diff -Nrup refpolicy/test_execshare.te refpolicy.newpatch/test_execshare.te
--- refpolicy/test_execshare.te	2008-04-09 15:29:02.000000000 -0400
+++ refpolicy.newpatch/test_execshare.te	2008-04-09 09:01:47.000000000 -0400
@@ -8,18 +8,21 @@ attribute execsharedomain;
 # Domain for parent process.
 type test_execshare_parent_t;
 domain_type(test_execshare_parent_t)
+unconfined_runs_test(test_execshare_parent_t)
 typeattribute test_execshare_parent_t execsharedomain;
 typeattribute test_execshare_parent_t testdomain;
 
 # Domain for child process that can share state with the parent across exec.
 type test_execshare_child_t;
 domain_type(test_execshare_child_t)
+unconfined_runs_test(test_execshare_child_t)
 typeattribute test_execshare_child_t execsharedomain;
 typeattribute test_execshare_child_t testdomain;
 
 # Domain for child process that cannot share state with the parent across exec.
 type test_execshare_notchild_t;
 domain_type(test_execshare_notchild_t);
+unconfined_runs_test(test_execshare_notchild_t)
 typeattribute test_execshare_notchild_t execsharedomain;
 typeattribute test_execshare_notchild_t testdomain;
 
diff -Nrup refpolicy/test_exectrace.te refpolicy.newpatch/test_exectrace.te
--- refpolicy/test_exectrace.te	2008-04-09 15:29:02.000000000 -0400
+++ refpolicy.newpatch/test_exectrace.te	2008-04-09 09:01:52.000000000 -0400
@@ -8,6 +8,7 @@ attribute exectracedomain;
 # Domain for parent process.
 type test_exectrace_parent_t;
 domain_type(test_exectrace_parent_t)
+unconfined_runs_test(test_exectrace_parent_t)
 typeattribute test_exectrace_parent_t exectracedomain;
 typeattribute test_exectrace_parent_t testdomain;
 
@@ -17,12 +18,14 @@ allow test_exectrace_parent_t self:proce
 # Domain for child process that can be traced across an exec by the parent.
 type test_exectrace_child_t;
 domain_type(test_exectrace_child_t)
+unconfined_runs_test(test_exectrace_child_t)
 typeattribute test_exectrace_child_t exectracedomain;
 typeattribute test_exectrace_child_t testdomain;
 
 # Domain for child process that cannot be traced across an exec by the parent.
 type test_exectrace_notchild_t;
 domain_type(test_exectrace_notchild_t)
+unconfined_runs_test(test_exectrace_notchild_t)
 typeattribute test_exectrace_notchild_t exectracedomain;
 typeattribute test_exectrace_notchild_t testdomain;
 
diff -Nrup refpolicy/test_execute_no_trans.te refpolicy.newpatch/test_execute_no_trans.te
--- refpolicy/test_execute_no_trans.te	2008-04-09 15:29:02.000000000 -0400
+++ refpolicy.newpatch/test_execute_no_trans.te	2008-04-09 09:01:57.000000000 -0400
@@ -15,6 +15,7 @@ files_type(test_execute_notrans_denied_t
 # Test domain that can only be entered via the types above.
 type test_execute_notrans_t;
 domain_type(test_execute_notrans_t);
+unconfined_runs_test(test_execute_notrans_t)
 typeattribute test_execute_notrans_t testdomain;
 
 # Allow this domain to be entered via the shell.
diff -Nrup refpolicy/test_fdreceive.te refpolicy.newpatch/test_fdreceive.te
--- refpolicy/test_fdreceive.te	2008-04-09 15:29:02.000000000 -0400
+++ refpolicy.newpatch/test_fdreceive.te	2008-04-09 09:02:03.000000000 -0400
@@ -16,12 +16,14 @@ files_type(test_fdreceive_file2_t)
 # Domain for client process.
 type test_fdreceive_client_t;
 domain_type(test_fdreceive_client_t)
+unconfined_runs_test(test_fdreceive_client_t)
 typeattribute test_fdreceive_client_t fdreceivedomain;
 typeattribute test_fdreceive_client_t testdomain;
 
 # Domain for second client process.
 type test_fdreceive_client2_t;
 domain_type(test_fdreceive_client2_t)
+unconfined_runs_test(test_fdreceive_client2_t)
 typeattribute test_fdreceive_client2_t fdreceivedomain;
 typeattribute test_fdreceive_client2_t testdomain;
 
@@ -30,6 +32,7 @@ typeattribute test_fdreceive_client2_t t
 # Can access test file, not second test file.
 type test_fdreceive_server_t;
 domain_type(test_fdreceive_server_t);
+unconfined_runs_test(test_fdreceive_server_t)
 typeattribute test_fdreceive_server_t fdreceivedomain;
 typeattribute test_fdreceive_server_t testdomain;
 
diff -Nrup refpolicy/test_file.te refpolicy.newpatch/test_file.te
--- refpolicy/test_file.te	2008-04-09 15:29:01.000000000 -0400
+++ refpolicy.newpatch/test_file.te	2008-04-09 09:02:24.000000000 -0400
@@ -8,6 +8,7 @@ attribute fileopdomain;
 # Domain for process that is allowed to perform operations.
 type test_fileop_t;
 domain_type(test_fileop_t)
+unconfined_runs_test(test_fileop_t)
 domain_obj_id_change_exemption(test_fileop_t)
 typeattribute test_fileop_t fileopdomain;
 typeattribute test_fileop_t testdomain;
@@ -15,6 +16,7 @@ typeattribute test_fileop_t testdomain;
 # Domain for process that is not allowed to perform all operations.
 type test_nofileop_t;
 domain_type(test_nofileop_t)
+unconfined_runs_test(test_nofileop_t)
 domain_obj_id_change_exemption(test_nofileop_t)
 typeattribute test_nofileop_t fileopdomain;
 typeattribute test_nofileop_t testdomain;
@@ -30,6 +32,7 @@ files_type(fileop_exec_t)
 # Domain for running certain executables
 type fileop_t;
 domain_type(fileop_t)
+unconfined_runs_test(fileop_t)
 typeattribute fileop_t fileopdomain;
 typeattribute fileop_t testdomain;
 
@@ -43,7 +46,6 @@ files_type(nofileop_ra_file_t)
 
 # Allow execution of helper programs.
 corecmd_exec_bin(fileopdomain)
-corecmd_exec_sbin(fileopdomain)
 domain_exec_all_entry_files(fileopdomain)
 libs_use_ld_so(fileopdomain)
 libs_use_shared_libs(fileopdomain)
@@ -57,9 +59,6 @@ userdom_sysadm_entry_spec_domtrans_to(fi
 corecmd_bin_entry_type(fileopdomain)
 userdom_sysadm_bin_spec_domtrans_to(fileopdomain)
 
-corecmd_sbin_entry_type(fileopdomain)
-userdom_sysadm_sbin_spec_domtrans_to(fileopdomain)
-
 allow fileop_t fileop_exec_t:file entrypoint;
 domain_auto_trans(test_fileop_t, fileop_exec_t, fileop_t)
 allow test_fileop_t fileop_t:fd use;
diff -Nrup refpolicy/test_inherit.te refpolicy.newpatch/test_inherit.te
--- refpolicy/test_inherit.te	2008-04-09 15:29:02.000000000 -0400
+++ refpolicy.newpatch/test_inherit.te	2008-04-09 09:02:30.000000000 -0400
@@ -8,6 +8,7 @@ attribute inheritdomain;
 # Domain for parent process.
 type test_inherit_parent_t;
 domain_type(test_inherit_parent_t)
+unconfined_runs_test(test_inherit_parent_t)
 typeattribute test_inherit_parent_t inheritdomain;
 typeattribute test_inherit_parent_t testdomain;
 
@@ -18,6 +19,7 @@ files_type(test_inherit_file_t)
 # Domain for child process that can inherit r/w fd to test file from parent.
 type test_inherit_child_t;
 domain_type(test_inherit_child_t)
+unconfined_runs_test(test_inherit_child_t)
 typeattribute test_inherit_child_t inheritdomain;
 typeattribute test_inherit_child_t testdomain;
 
@@ -25,6 +27,7 @@ typeattribute test_inherit_child_t testd
 # of fd use permission.
 type test_inherit_nouse_t;
 domain_type(test_inherit_nouse_t)
+unconfined_runs_test(test_inherit_nouse_t)
 typeattribute test_inherit_nouse_t inheritdomain;
 typeattribute test_inherit_nouse_t testdomain;
 
@@ -32,6 +35,7 @@ typeattribute test_inherit_nouse_t testd
 # due to lack of file write permission.
 type test_inherit_nowrite_t;
 domain_type(test_inherit_nowrite_t)
+unconfined_runs_test(test_inherit_nowrite_t)
 typeattribute test_inherit_nowrite_t inheritdomain;
 typeattribute test_inherit_nowrite_t testdomain;
 
diff -Nrup refpolicy/test_ioctl.te refpolicy.newpatch/test_ioctl.te
--- refpolicy/test_ioctl.te	2008-04-09 15:29:02.000000000 -0400
+++ refpolicy.newpatch/test_ioctl.te	2008-04-09 09:02:37.000000000 -0400
@@ -8,12 +8,14 @@ attribute ioctldomain;
 # Domain for process that is allowed to perform ioctl.
 type test_ioctl_t;
 domain_type(test_ioctl_t)
+unconfined_runs_test(test_ioctl_t)
 typeattribute test_ioctl_t ioctldomain;
 typeattribute test_ioctl_t testdomain;
 
 # Domain for process that is not allowed to perform ioctl.
 type test_noioctl_t;
 domain_type(test_noioctl_t)
+unconfined_runs_test(test_noioctl_t)
 typeattribute test_noioctl_t ioctldomain;
 typeattribute test_noioctl_t testdomain;
 
@@ -23,7 +25,6 @@ files_type(test_ioctl_file_t)
 
 # Allow execution of helper programs.
 corecmd_exec_bin(ioctldomain)
-corecmd_exec_sbin(ioctldomain)
 domain_exec_all_entry_files(ioctldomain)
 files_exec_etc_files(ioctldomain)
 libs_use_ld_so(ioctldomain)
diff -Nrup refpolicy/test_ipc.te refpolicy.newpatch/test_ipc.te
--- refpolicy/test_ipc.te	2008-04-09 15:29:02.000000000 -0400
+++ refpolicy.newpatch/test_ipc.te	2008-04-09 09:02:44.000000000 -0400
@@ -8,6 +8,7 @@ attribute ipcdomain;
 # Base domain for IPC tests, has all IPC permissions 
 type test_ipc_base_t;
 domain_type(test_ipc_base_t)
+unconfined_runs_test(test_ipc_base_t)
 typeattribute test_ipc_base_t ipcdomain;
 typeattribute test_ipc_base_t testdomain;
 allow test_ipc_base_t self:msgq create;
@@ -15,18 +16,21 @@ allow test_ipc_base_t self:msgq create;
 # Domain that has read only access to IPC resources
 type test_ipc_read_t;
 domain_type(test_ipc_read_t)
+unconfined_runs_test(test_ipc_read_t)
 typeattribute test_ipc_read_t ipcdomain;
 typeattribute test_ipc_read_t testdomain;
 
 # Domain that can't create, associate, control, or use IPC resources
 type test_ipc_none_t;
 domain_type(test_ipc_none_t)
+unconfined_runs_test(test_ipc_none_t)
 typeattribute test_ipc_none_t ipcdomain;
 typeattribute test_ipc_none_t testdomain;
 
 # Domain that can associate, but not do anything else
 type test_ipc_associate_t;
 domain_type(test_ipc_associate_t)
+unconfined_runs_test(test_ipc_associate_t)
 typeattribute test_ipc_associate_t ipcdomain;
 typeattribute test_ipc_associate_t testdomain;
 
diff -Nrup refpolicy/test_link.te refpolicy.newpatch/test_link.te
--- refpolicy/test_link.te	2008-04-09 15:29:02.000000000 -0400
+++ refpolicy.newpatch/test_link.te	2008-04-09 09:02:51.000000000 -0400
@@ -16,6 +16,7 @@ files_type(test_link_file_t)
 # Domain for process that can create hard links to the file.
 type test_link_t;
 domain_type(test_link_t)
+unconfined_runs_test(test_link_t)
 typeattribute test_link_t test_link_domain;
 typeattribute test_link_t testdomain;
 
@@ -26,6 +27,7 @@ allow test_link_t test_link_file_t:file 
 # because it lacks link permission to the file.
 type test_nolink_t;
 domain_type(test_nolink_t)
+unconfined_runs_test(test_nolink_t)
 typeattribute test_nolink_t test_link_domain;
 typeattribute test_nolink_t testdomain;
 allow test_nolink_t test_link_dir_t:dir { search getattr write add_name };
@@ -36,6 +38,7 @@ allow test_nolink_t test_link_file_t:fil
 # the directory.
 type test_nolink2_t;
 domain_type(test_nolink2_t)
+unconfined_runs_test(test_nolink2_t)
 typeattribute test_nolink2_t test_link_domain;
 typeattribute test_nolink2_t testdomain;
 allow test_nolink2_t test_link_dir_t:dir { search getattr write };
@@ -44,6 +47,7 @@ allow test_nolink2_t test_link_file_t:fi
 # Domain for process that can remove hard links to the file.
 type test_unlink_t;
 domain_type(test_unlink_t)
+unconfined_runs_test(test_unlink_t)
 typeattribute test_unlink_t test_link_domain;
 typeattribute test_unlink_t testdomain;
 allow test_unlink_t test_link_dir_t:dir { search getattr write remove_name };
@@ -53,6 +57,7 @@ allow test_unlink_t test_link_file_t:fil
 # because it lacks unlink permission to the file.
 type test_nounlink_t;
 domain_type(test_nounlink_t)
+unconfined_runs_test(test_nounlink_t)
 typeattribute test_nounlink_t test_link_domain;
 typeattribute test_nounlink_t testdomain;
 allow test_nounlink_t test_link_dir_t:dir { search getattr write remove_name };
@@ -62,6 +67,7 @@ allow test_nounlink_t test_link_file_t:f
 # the test directory because it lacks remove_name permission to the directory.
 type test_nounlink2_t;
 domain_type(test_nounlink2_t)
+unconfined_runs_test(test_nounlink2_t)
 typeattribute test_nounlink2_t test_link_domain;
 typeattribute test_nounlink2_t testdomain;
 allow test_nounlink2_t test_link_dir_t:dir { search getattr write };
diff -Nrup refpolicy/test_mkdir.te refpolicy.newpatch/test_mkdir.te
--- refpolicy/test_mkdir.te	2008-04-09 15:29:01.000000000 -0400
+++ refpolicy.newpatch/test_mkdir.te	2008-04-09 09:02:58.000000000 -0400
@@ -12,6 +12,7 @@ files_type(test_mkdir_dir_t)
 # Domain for process that has add_name permission to the test directory.
 type test_addname_t;
 domain_type(test_addname_t)
+unconfined_runs_test(test_addname_t)
 typeattribute test_addname_t test_mkdir_domain;
 typeattribute test_addname_t testdomain;
 allow test_addname_t test_mkdir_dir_t:dir { search getattr write add_name create };
@@ -19,6 +20,7 @@ allow test_addname_t test_mkdir_dir_t:di
 # Domain for process that lacks add_name permission to the test directory.
 type test_noaddname_t;
 domain_type(test_noaddname_t)
+unconfined_runs_test(test_noaddname_t)
 typeattribute test_noaddname_t test_mkdir_domain;
 typeattribute test_noaddname_t testdomain;
 allow test_noaddname_t test_mkdir_dir_t:dir { search getattr write create };
@@ -26,6 +28,7 @@ allow test_noaddname_t test_mkdir_dir_t:
 # Domain for process that lacks search permission to the test directory.
 type test_nosearch_t;
 domain_type(test_nosearch_t)
+unconfined_runs_test(test_nosearch_t)
 typeattribute test_nosearch_t test_mkdir_domain;
 typeattribute test_nosearch_t testdomain;
 allow test_nosearch_t test_mkdir_dir_t:dir { getattr write add_name create };
@@ -38,6 +41,7 @@ files_type(test_create_dir_t)
 # create permission to the new type.
 type test_create_t;
 domain_type(test_create_t)
+unconfined_runs_test(test_create_t)
 typeattribute test_create_t test_mkdir_domain;
 typeattribute test_create_t testdomain;
 domain_obj_id_change_exemption(test_create_t)
@@ -48,6 +52,7 @@ allow test_create_t test_create_dir_t:di
 # lacks create permission to the new type.
 type test_nocreate_t;
 domain_type(test_nocreate_t)
+unconfined_runs_test(test_nocreate_t)
 typeattribute test_nocreate_t test_mkdir_domain;
 typeattribute test_nocreate_t testdomain;
 domain_obj_id_change_exemption(test_nocreate_t)
diff -Nrup refpolicy/test_open.te refpolicy.newpatch/test_open.te
--- refpolicy/test_open.te	2008-04-09 15:29:02.000000000 -0400
+++ refpolicy.newpatch/test_open.te	2008-04-09 09:03:05.000000000 -0400
@@ -12,6 +12,7 @@ files_type(test_open_file_t)
 # Domain for process that can open the test file for reading and writing.
 type test_open_t;
 domain_type(test_open_t)
+unconfined_runs_test(test_open_t)
 typeattribute test_open_t test_open_domain;
 typeattribute test_open_t testdomain;
 allow test_open_t test_open_file_t:file { getattr read write append };
@@ -19,6 +20,7 @@ allow test_open_t test_open_file_t:file 
 # Domain for process that cannot open the test file for reading or writing.
 type test_noopen_t;
 domain_type(test_noopen_t)
+unconfined_runs_test(test_noopen_t)
 typeattribute test_noopen_t test_open_domain;
 typeattribute test_noopen_t testdomain;
 allow test_noopen_t test_open_file_t:file { getattr };
@@ -26,6 +28,7 @@ allow test_noopen_t test_open_file_t:fil
 # Domain for process that can open test file for writing with O_APPEND.
 type test_append_t;
 domain_type(test_append_t)
+unconfined_runs_test(test_append_t)
 typeattribute test_append_t test_open_domain;
 typeattribute test_append_t testdomain;
 allow test_append_t test_open_file_t:file { getattr append };
diff -Nrup refpolicy/test_policy.if refpolicy.newpatch/test_policy.if
--- refpolicy/test_policy.if	2008-04-09 15:29:02.000000000 -0400
+++ refpolicy.newpatch/test_policy.if	2008-04-09 08:57:37.000000000 -0400
@@ -25,3 +25,20 @@
 ##      Domain allowed to transition.
 ## </param>
 #
+
+interface(`unconfined_runs_test',`
+	gen_require(`
+		type unconfined_t;
+               type unconfined_devpts_t;
+		role unconfined_r;
+	')
+
+       # Transition from the caller to the test domain.
+	allow unconfined_t $1:process transition;
+	role unconfined_r types $1;
+      # Report back from the test domain to the caller.
+      allow $1 unconfined_t:fd use;
+      allow $1 unconfined_devpts_t:chr_file { read write ioctl getattr };
+      allow $1 unconfined_t:fifo_file { read write ioctl getattr };
+      allow $1 unconfined_t:process { sigchld };
+')
diff -Nrup refpolicy/test_ptrace.te refpolicy.newpatch/test_ptrace.te
--- refpolicy/test_ptrace.te	2008-04-09 15:29:02.000000000 -0400
+++ refpolicy.newpatch/test_ptrace.te	2008-04-09 09:03:14.000000000 -0400
@@ -8,6 +8,7 @@ attribute ptracedomain;
 # Domain for process that is allowed to trace.
 type test_ptrace_tracer_t;
 domain_type(test_ptrace_tracer_t)
+unconfined_runs_test(test_ptrace_tracer_t)
 typeattribute test_ptrace_tracer_t ptracedomain;
 typeattribute test_ptrace_tracer_t testdomain;
 allow test_ptrace_tracer_t self:capability sys_ptrace;
@@ -15,6 +16,7 @@ allow test_ptrace_tracer_t self:capabili
 # Domain for process that is not allowed to trace.
 type test_ptrace_nottracer_t;
 domain_type(test_ptrace_nottracer_t)
+unconfined_runs_test(test_ptrace_nottracer_t)
 typeattribute test_ptrace_nottracer_t ptracedomain;
 typeattribute test_ptrace_nottracer_t testdomain;
 allow test_ptrace_nottracer_t self:capability sys_ptrace;
@@ -22,6 +24,7 @@ allow test_ptrace_nottracer_t self:capab
 # Domain for process that is to be traced.
 type test_ptrace_traced_t;
 domain_type(test_ptrace_traced_t)
+unconfined_runs_test(test_ptrace_traced_t)
 typeattribute test_ptrace_traced_t ptracedomain;
 typeattribute test_ptrace_traced_t testdomain;
 
diff -Nrup refpolicy/test_readlink.te refpolicy.newpatch/test_readlink.te
--- refpolicy/test_readlink.te	2008-04-09 15:29:02.000000000 -0400
+++ refpolicy.newpatch/test_readlink.te	2008-04-09 09:03:18.000000000 -0400
@@ -14,6 +14,7 @@ files_type(test_readlink_link_t)
 # Domain for process that can read and follow the symbolic link.
 type test_readlink_t;
 domain_type(test_readlink_t)
+unconfined_runs_test(test_readlink_t)
 typeattribute test_readlink_t test_readlink_domain;
 typeattribute test_readlink_t testdomain;
 allow test_readlink_t test_readlink_file_t:file { getattr read };
@@ -22,6 +23,7 @@ allow test_readlink_t test_readlink_link
 # Domain for process that cannot read or follow the symbolic link.
 type test_noreadlink_t;
 domain_type(test_noreadlink_t)
+unconfined_runs_test(test_noreadlink_t)
 typeattribute test_noreadlink_t test_readlink_domain;
 typeattribute test_noreadlink_t testdomain;
 allow test_noreadlink_t test_readlink_file_t:file { getattr read };
diff -Nrup refpolicy/test_relabel.te refpolicy.newpatch/test_relabel.te
--- refpolicy/test_relabel.te	2008-04-09 15:29:02.000000000 -0400
+++ refpolicy.newpatch/test_relabel.te	2008-04-09 09:03:23.000000000 -0400
@@ -14,6 +14,7 @@ files_type(test_relabel_newtype_t)
 # Domain for process that can relabel the test file.
 type test_relabel_t;
 domain_type(test_relabel_t)
+unconfined_runs_test(test_relabel_t)
 domain_obj_id_change_exemption(test_relabel_t)
 typeattribute test_relabel_t test_relabel_domain;
 typeattribute test_relabel_t testdomain;
@@ -23,6 +24,7 @@ allow test_relabel_t test_relabel_newtyp
 # Domain for process that lacks relabelfrom permission to the old type.
 type test_norelabelfrom_t;
 domain_type(test_norelabelfrom_t)
+unconfined_runs_test(test_norelabelfrom_t)
 domain_obj_id_change_exemption(test_norelabelfrom_t)
 typeattribute test_norelabelfrom_t test_relabel_domain;
 typeattribute test_norelabelfrom_t testdomain;
@@ -32,6 +34,7 @@ allow test_norelabelfrom_t test_relabel_
 # Domain for process that lacks relabelto permission to the new type.
 type test_norelabelto_t;
 domain_type(test_norelabelto_t)
+unconfined_runs_test(test_norelabelto_t)
 domain_obj_id_change_exemption(test_norelabelto_t)
 typeattribute test_norelabelto_t test_relabel_domain;
 typeattribute test_norelabelto_t testdomain;
diff -Nrup refpolicy/test_rename.te refpolicy.newpatch/test_rename.te
--- refpolicy/test_rename.te	2008-04-09 15:29:01.000000000 -0400
+++ refpolicy.newpatch/test_rename.te	2008-04-09 09:03:31.000000000 -0400
@@ -20,6 +20,7 @@ files_type(test_rename_dir_t)
 # Domain for process that can rename the test file and directory.
 type test_rename_t;
 domain_type(test_rename_t)
+unconfined_runs_test(test_rename_t)
 typeattribute test_rename_t test_rename_domain;
 typeattribute test_rename_t testdomain;
 allow test_rename_t test_rename_src_dir_t:dir { search getattr write remove_name };
@@ -30,6 +31,7 @@ allow test_rename_t test_rename_dir_t:di
 # Domain for process that can rename the test file over an existing file.
 type test_rename2_t;
 domain_type(test_rename2_t)
+unconfined_runs_test(test_rename2_t)
 typeattribute test_rename2_t test_rename_domain;
 typeattribute test_rename2_t testdomain;
 allow test_rename2_t test_rename_src_dir_t:dir { search getattr write remove_name };
@@ -41,6 +43,7 @@ allow test_rename2_t test_rename_dst_dir
 # it lacks rename permission to the file.
 type test_norename_t;
 domain_type(test_norename_t)
+unconfined_runs_test(test_norename_t)
 typeattribute test_norename_t test_rename_domain;
 typeattribute test_norename_t testdomain;
 allow test_norename_t test_rename_src_dir_t:dir { search getattr write remove_name };
@@ -51,6 +54,7 @@ allow test_norename_t test_rename_file_t
 # it lacks remove_name permission to the src_dir.
 type test_norename2_t;
 domain_type(test_norename2_t)
+unconfined_runs_test(test_norename2_t)
 typeattribute test_norename2_t test_rename_domain;
 typeattribute test_norename2_t testdomain;
 allow test_norename2_t test_rename_src_dir_t:dir { search getattr write };
@@ -61,6 +65,7 @@ allow test_norename2_t test_rename_file_
 # it lacks add_name permission to the dst_dir.
 type test_norename3_t;
 domain_type(test_norename3_t)
+unconfined_runs_test(test_norename3_t)
 typeattribute test_norename3_t test_rename_domain;
 typeattribute test_norename3_t testdomain;
 allow test_norename3_t test_rename_src_dir_t:dir { search getattr write remove_name };
@@ -72,6 +77,7 @@ allow test_norename3_t test_rename_file_
 # the dst_dir.
 type test_norename4_t;
 domain_type(test_norename4_t)
+unconfined_runs_test(test_norename4_t)
 typeattribute test_norename4_t test_rename_domain;
 typeattribute test_norename4_t testdomain;
 allow test_norename4_t test_rename_src_dir_t:dir { search getattr write remove_name };
@@ -84,6 +90,7 @@ allow test_norename4_t test_rename_dst_d
 # the destination file.
 type test_norename5_t;
 domain_type(test_norename5_t)
+unconfined_runs_test(test_norename5_t)
 typeattribute test_norename5_t test_rename_domain;
 typeattribute test_norename5_t testdomain;
 allow test_norename5_t test_rename_src_dir_t:dir { search getattr write remove_name };
@@ -95,6 +102,7 @@ allow test_norename5_t test_rename_dst_d
 # because it lacks reparent permission.
 type test_norename6_t;
 domain_type(test_norename6_t)
+unconfined_runs_test(test_norename6_t)
 typeattribute test_norename6_t test_rename_domain;
 typeattribute test_norename6_t testdomain;
 allow test_norename6_t test_rename_src_dir_t:dir { search getattr write remove_name };
diff -Nrup refpolicy/test_rxdir.te refpolicy.newpatch/test_rxdir.te
--- refpolicy/test_rxdir.te	2008-04-09 15:29:01.000000000 -0400
+++ refpolicy.newpatch/test_rxdir.te	2008-04-09 09:03:35.000000000 -0400
@@ -12,6 +12,7 @@ files_type(test_rxdir_dir_t)
 # Domain for process that can read but not search the directory.
 type test_rdir_t;
 domain_type(test_rdir_t)
+unconfined_runs_test(test_rdir_t)
 typeattribute test_rdir_t test_rxdir_domain;
 typeattribute test_rdir_t testdomain;
 allow test_rdir_t test_rxdir_dir_t:dir { getattr read };
@@ -20,6 +21,7 @@ allow test_rdir_t test_rxdir_dir_t:file 
 # Domain for process that can search but not read the directory.
 type test_xdir_t;
 domain_type(test_xdir_t)
+unconfined_runs_test(test_xdir_t)
 typeattribute test_xdir_t test_rxdir_domain;
 typeattribute test_xdir_t testdomain;
 allow test_xdir_t test_rxdir_dir_t:dir { getattr search };
diff -Nrup refpolicy/test_setattr.te refpolicy.newpatch/test_setattr.te
--- refpolicy/test_setattr.te	2008-04-09 15:29:02.000000000 -0400
+++ refpolicy.newpatch/test_setattr.te	2008-04-09 09:03:38.000000000 -0400
@@ -12,6 +12,7 @@ files_type(test_setattr_file_t)
 # Domain for process that can set attributes on the test file.
 type test_setattr_t;
 domain_type(test_setattr_t)
+unconfined_runs_test(test_setattr_t)
 typeattribute test_setattr_t test_setattr_domain;
 typeattribute test_setattr_t testdomain;
 allow test_setattr_t self:capability chown;
@@ -20,6 +21,7 @@ allow test_setattr_t test_setattr_file_t
 # Domain for process that cannot set attributes on the test file.
 type test_nosetattr_t;
 domain_type(test_nosetattr_t)
+unconfined_runs_test(test_nosetattr_t)
 typeattribute test_nosetattr_t test_setattr_domain;
 typeattribute test_nosetattr_t testdomain;
 allow test_nosetattr_t self:capability chown;
diff -Nrup refpolicy/test_setnice.te refpolicy.newpatch/test_setnice.te
--- refpolicy/test_setnice.te	2008-04-09 15:29:02.000000000 -0400
+++ refpolicy.newpatch/test_setnice.te	2008-04-09 09:03:47.000000000 -0400
@@ -8,24 +8,26 @@ attribute setnicedomain;
 # Domain for process whose nice can be set.
 type test_setnice_set_t;
 domain_type(test_setnice_set_t)
+unconfined_runs_test(test_setnice_set_t)
 typeattribute test_setnice_set_t setnicedomain;
 typeattribute test_setnice_set_t testdomain;
 
 # Domain for process whose nice cannot be set.
 type test_setnice_noset_t;
 domain_type(test_setnice_noset_t)
+unconfined_runs_test(test_setnice_noset_t)
 typeattribute test_setnice_noset_t setnicedomain;
 typeattribute test_setnice_noset_t testdomain;
 
 # Domain for parent process.
 type test_setnice_change_t;
 domain_type(test_setnice_change_t)
+unconfined_runs_test(test_setnice_change_t)
 typeattribute test_setnice_change_t setnicedomain;
 typeattribute test_setnice_change_t testdomain;
 
 # Allow execution of helper programs.
 corecmd_exec_bin(setnicedomain)
-corecmd_exec_sbin(setnicedomain)
 domain_exec_all_entry_files(setnicedomain)
 files_exec_etc_files(setnicedomain)
 libs_use_ld_so(setnicedomain)
diff -Nrup refpolicy/test_sigkill.te refpolicy.newpatch/test_sigkill.te
--- refpolicy/test_sigkill.te	2008-04-09 15:29:01.000000000 -0400
+++ refpolicy.newpatch/test_sigkill.te	2008-04-09 09:03:55.000000000 -0400
@@ -8,12 +8,14 @@ attribute killdomain;
 # Domain for process that receives the signals.
 type test_kill_server_t;
 domain_type(test_kill_server_t)
+unconfined_runs_test(test_kill_server_t)
 typeattribute test_kill_server_t killdomain;
 typeattribute test_kill_server_t testdomain;
 
 # Domain for process that is allowed to send sigkill.
 type test_kill_sigkill_t;
 domain_type(test_kill_sigkill_t)
+unconfined_runs_test(test_kill_sigkill_t)
 typeattribute test_kill_sigkill_t killdomain;
 typeattribute test_kill_sigkill_t testdomain;
 allow test_kill_sigkill_t test_kill_server_t:process sigkill;
@@ -21,6 +23,7 @@ allow test_kill_sigkill_t test_kill_serv
 # Domain for process that is allowed to send sigstop.
 type test_kill_sigstop_t;
 domain_type(test_kill_sigstop_t)
+unconfined_runs_test(test_kill_sigstop_t)
 typeattribute test_kill_sigstop_t killdomain;
 typeattribute test_kill_sigstop_t testdomain;
 allow test_kill_sigstop_t test_kill_server_t:process sigstop;
@@ -28,6 +31,7 @@ allow test_kill_sigstop_t test_kill_serv
 # Domain for process that is allowed to send sigchld.
 type test_kill_sigchld_t;
 domain_type(test_kill_sigchld_t)
+unconfined_runs_test(test_kill_sigchld_t)
 typeattribute test_kill_sigchld_t killdomain;
 typeattribute test_kill_sigchld_t testdomain;
 allow test_kill_sigchld_t test_kill_server_t:process sigchld;
@@ -35,6 +39,7 @@ allow test_kill_sigchld_t test_kill_serv
 # Domain for process that is allowed to send other signals.
 type test_kill_signal_t;
 domain_type(test_kill_signal_t)
+unconfined_runs_test(test_kill_signal_t)
 typeattribute test_kill_signal_t killdomain;
 typeattribute test_kill_signal_t testdomain;
 
diff -Nrup refpolicy/test_stat.te refpolicy.newpatch/test_stat.te
--- refpolicy/test_stat.te	2008-04-09 15:29:02.000000000 -0400
+++ refpolicy.newpatch/test_stat.te	2008-04-09 09:04:00.000000000 -0400
@@ -12,6 +12,7 @@ files_type(test_stat_file_t)
 # Domain for process that can get attributes on the test file.
 type test_stat_t;
 domain_type(test_stat_t)
+unconfined_runs_test(test_stat_t)
 typeattribute test_stat_t test_stat_domain;
 typeattribute test_stat_t testdomain;
 allow test_stat_t test_stat_file_t:file getattr;
@@ -19,6 +20,7 @@ allow test_stat_t test_stat_file_t:file 
 # Domain for process that cannot set attributes on the test file.
 type test_nostat_t;
 domain_type(test_nostat_t)
+unconfined_runs_test(test_nostat_t)
 typeattribute test_nostat_t test_stat_domain;
 typeattribute test_nostat_t testdomain;
 
diff -Nrup refpolicy/test_sysctl.te refpolicy.newpatch/test_sysctl.te
--- refpolicy/test_sysctl.te	2008-04-09 15:29:02.000000000 -0400
+++ refpolicy.newpatch/test_sysctl.te	2008-04-09 09:04:03.000000000 -0400
@@ -8,19 +8,21 @@ attribute sysctldomain;
 # Domain for process that is allowed to perform sysctl.
 type test_sysctl_t;
 domain_type(test_sysctl_t)
+unconfined_runs_test(test_sysctl_t)
 typeattribute test_sysctl_t sysctldomain;
 typeattribute test_sysctl_t testdomain;
 
 # Domain for process that is not allowed to perform sysctl.
 type test_nosysctl_t;
 domain_type(test_nosysctl_t)
+unconfined_runs_test(test_nosysctl_t)
 typeattribute test_nosysctl_t sysctldomain;
 typeattribute test_nosysctl_t testdomain;
 
 # Allow all of these domains to be entered from sysadm domain
 # via /sbin/sysctl.
-corecmd_sbin_entry_type(sysctldomain)
-userdom_sysadm_sbin_spec_domtrans_to(sysctldomain)
+corecmd_bin_entry_type(sysctldomain)
+userdom_sysadm_bin_spec_domtrans_to(sysctldomain)
 
 # Allow the first domain to perform sysctl operations.
 kernel_rw_all_sysctls(test_sysctl_t)
diff -Nrup refpolicy/test_task_create.te refpolicy.newpatch/test_task_create.te
--- refpolicy/test_task_create.te	2008-04-09 15:29:02.000000000 -0400
+++ refpolicy.newpatch/test_task_create.te	2008-04-09 09:04:07.000000000 -0400
@@ -8,6 +8,7 @@ attribute test_create_d;
 # Domain for process allowed to fork.
 type test_create_yes_t;
 domain_type(test_create_yes_t)
+unconfined_runs_test(test_create_yes_t)
 typeattribute test_create_yes_t test_create_d;
 typeattribute test_create_yes_t testdomain;
 
@@ -21,6 +22,7 @@ type test_create_no_t;
 # Ideally, refpolicy would _not_ grant such permissions to every domain,
 # as it makes the permission effectively unusable in real policy.
 #domain_type(test_create_no_t)
+unconfined_runs_test(test_create_no_t)
 typeattribute test_create_no_t test_create_d;
 
 allow test_create_no_t self:process ~fork;
diff -Nrup refpolicy/test_task_getpgid.te refpolicy.newpatch/test_task_getpgid.te
--- refpolicy/test_task_getpgid.te	2008-04-09 15:29:02.000000000 -0400
+++ refpolicy.newpatch/test_task_getpgid.te	2008-04-09 09:04:13.000000000 -0400
@@ -8,18 +8,21 @@ attribute test_getpgid_d;
 # Domain for the target process
 type test_getpgid_target_t;
 domain_type(test_getpgid_target_t)
+unconfined_runs_test(test_getpgid_target_t)
 typeattribute test_getpgid_target_t test_getpgid_d;
 typeattribute test_getpgid_target_t testdomain;
 
 # Domain that can get the target's process group ID.
 type test_getpgid_yes_t;
 domain_type(test_getpgid_yes_t)
+unconfined_runs_test(test_getpgid_yes_t)
 typeattribute test_getpgid_yes_t test_getpgid_d;
 typeattribute test_getpgid_yes_t testdomain;
 
 # Domain that cannot get the target's process group ID.
 type test_getpgid_no_t;
 domain_type(test_getpgid_no_t)
+unconfined_runs_test(test_getpgid_no_t)
 typeattribute test_getpgid_no_t test_getpgid_d;
 typeattribute test_getpgid_no_t testdomain;
 
diff -Nrup refpolicy/test_task_getsched.te refpolicy.newpatch/test_task_getsched.te
--- refpolicy/test_task_getsched.te	2008-04-09 15:29:02.000000000 -0400
+++ refpolicy.newpatch/test_task_getsched.te	2008-04-09 09:04:21.000000000 -0400
@@ -8,18 +8,21 @@ attribute test_getsched_d;
 # Domain for the target process
 type test_getsched_target_t;
 domain_type(test_getsched_target_t)
+unconfined_runs_test(test_getsched_target_t)
 typeattribute test_getsched_target_t test_getsched_d;
 typeattribute test_getsched_target_t testdomain;
 
 # Domain that can get the target's scheduling policy.
 type test_getsched_yes_t;
 domain_type(test_getsched_yes_t)
+unconfined_runs_test(test_getsched_yes_t)
 typeattribute test_getsched_yes_t test_getsched_d;
 typeattribute test_getsched_yes_t testdomain;
 
 # Domain that cannot get the target's scheduling policy.
 type test_getsched_no_t;
 domain_type(test_getsched_no_t)
+unconfined_runs_test(test_getsched_no_t)
 typeattribute test_getsched_no_t test_getsched_d;
 typeattribute test_getsched_no_t testdomain;
 
diff -Nrup refpolicy/test_task_getsid.te refpolicy.newpatch/test_task_getsid.te
--- refpolicy/test_task_getsid.te	2008-04-09 15:29:01.000000000 -0400
+++ refpolicy.newpatch/test_task_getsid.te	2008-04-09 09:04:25.000000000 -0400
@@ -8,18 +8,21 @@ attribute test_getsid_d;
 # Domain for the target process
 type test_getsid_target_t;
 domain_type(test_getsid_target_t)
+unconfined_runs_test(test_getsid_target_t)
 typeattribute test_getsid_target_t test_getsid_d;
 typeattribute test_getsid_target_t testdomain;
 
 # Domain that can get the target's session ID.
 type test_getsid_yes_t;
 domain_type(test_getsid_yes_t)
+unconfined_runs_test(test_getsid_yes_t)
 typeattribute test_getsid_yes_t test_getsid_d;
 typeattribute test_getsid_yes_t testdomain;
 
 # Domain that cannot get the target's session ID.
 type test_getsid_no_t;
 domain_type(test_getsid_no_t)
+unconfined_runs_test(test_getsid_no_t)
 typeattribute test_getsid_no_t test_getsid_d;
 typeattribute test_getsid_no_t testdomain;
 
diff -Nrup refpolicy/test_task_setpgid.te refpolicy.newpatch/test_task_setpgid.te
--- refpolicy/test_task_setpgid.te	2008-04-09 15:29:02.000000000 -0400
+++ refpolicy.newpatch/test_task_setpgid.te	2008-04-09 09:04:33.000000000 -0400
@@ -8,6 +8,7 @@ attribute test_setpgid_d;
 # Domain for process allowed to setpgid
 type test_setpgid_yes_t;
 domain_type(test_setpgid_yes_t)
+unconfined_runs_test(test_setpgid_yes_t)
 typeattribute test_setpgid_yes_t test_setpgid_d;
 typeattribute test_setpgid_yes_t testdomain;
 
@@ -15,6 +16,7 @@ typeattribute test_setpgid_yes_t testdom
 # The same permissions as test_setpgid_yes_t, except process setpgid
 type test_setpgid_no_t;
 domain_type(test_setpgid_no_t)
+unconfined_runs_test(test_setpgid_no_t)
 typeattribute test_setpgid_no_t test_setpgid_d;
 
 allow test_setpgid_no_t self:process ~{ setpgid setcurrent };
diff -Nrup refpolicy/test_task_setsched.te refpolicy.newpatch/test_task_setsched.te
--- refpolicy/test_task_setsched.te	2008-04-09 15:29:01.000000000 -0400
+++ refpolicy.newpatch/test_task_setsched.te	2008-04-09 09:04:39.000000000 -0400
@@ -9,18 +9,21 @@ attribute test_setsched_d;
 # Domain for the target process
 type test_setsched_target_t;
 domain_type(test_setsched_target_t)
+unconfined_runs_test(test_setsched_target_t)
 typeattribute test_setsched_target_t test_setsched_d;
 typeattribute test_setsched_target_t testdomain;
 
 # Domain that can change the target's priority and scheduling policy.
 type test_setsched_yes_t;
 domain_type(test_setsched_yes_t)
+unconfined_runs_test(test_setsched_yes_t)
 typeattribute test_setsched_yes_t test_setsched_d;
 typeattribute test_setsched_yes_t testdomain;
 
 # Domain that cannot change the target's priority or scheduling policy.
 type test_setsched_no_t;
 domain_type(test_setsched_no_t)
+unconfined_runs_test(test_setsched_no_t)
 typeattribute test_setsched_no_t test_setsched_d;
 typeattribute test_setsched_no_t testdomain;
 
diff -Nrup refpolicy/test_transition.te refpolicy.newpatch/test_transition.te
--- refpolicy/test_transition.te	2008-04-09 15:29:02.000000000 -0400
+++ refpolicy.newpatch/test_transition.te	2008-04-09 09:05:07.000000000 -0400
@@ -8,18 +8,21 @@ attribute transitiondomain;
 # Domain for process that is allowed to transition to the new domain.
 type test_transition_fromdomain_t;
 domain_type(test_transition_fromdomain_t)
+unconfined_runs_test(test_transition_fromdomain_t)
 typeattribute test_transition_fromdomain_t transitiondomain;
 typeattribute test_transition_fromdomain_t testdomain;
 
 # Domain for process that is not allowed to transition to the new domain.
 type test_transition_notfromdomain_t;
 domain_type(test_transition_notfromdomain_t)
+unconfined_runs_test(test_transition_notfromdomain_t)
 typeattribute test_transition_notfromdomain_t transitiondomain;
 typeattribute test_transition_notfromdomain_t testdomain;
 
 # New domain for the process after the transition.
 type test_transition_todomain_t;
 domain_type(test_transition_todomain_t)
+unconfined_runs_test(test_transition_todomain_t)
 typeattribute test_transition_todomain_t transitiondomain;
 typeattribute test_transition_todomain_t testdomain;
 
diff -Nrup refpolicy/test_wait.te refpolicy.newpatch/test_wait.te
--- refpolicy/test_wait.te	2008-04-09 15:29:01.000000000 -0400
+++ refpolicy.newpatch/test_wait.te	2008-04-09 09:05:11.000000000 -0400
@@ -8,18 +8,21 @@ attribute waitdomain;
 # Domain for parent process.
 type test_wait_parent_t;
 domain_type(test_wait_parent_t)
+unconfined_runs_test(test_wait_parent_t)
 typeattribute test_wait_parent_t waitdomain;
 typeattribute test_wait_parent_t testdomain;
 
 # Domain for child process that can be reaped by the parent.
 type test_wait_child_t;
 domain_type(test_wait_child_t)
+unconfined_runs_test(test_wait_child_t)
 typeattribute test_wait_child_t waitdomain;
 typeattribute test_wait_child_t testdomain;
 
 # Domain for child process that cannot be reaped by the parent.
 type test_wait_notchild_t;
 domain_type(test_wait_notchild_t)
+unconfined_runs_test(test_wait_notchild_t)
 typeattribute test_wait_notchild_t waitdomain;
 typeattribute test_wait_notchild_t testdomain;
 
